name: Security Tests

on:
  pull_request:
    branches:
      - '**'

permissions:
  checks: write
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install application dependencies
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps

      - name: Build Docker image and run container
        run: |
          docker build -t juice-shop .
          docker run -d -p 3000:3000 --name juice-shop-container juice-shop

      - name: Wait for application to be ready
        run: |
          until nc -zv 127.0.0.1 3000; do echo "Waiting for application..."; sleep 5; done

  security-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install SecTesterJS dependencies
        run: |
          cd .brightsec
          npm i --save=false @sectester/core @sectester/repeater @sectester/scan @sectester/runner

      - name: Run security tests
        env:
          BRIGHT_HOSTNAME: ${{ vars.BRIGHT_HOSTNAME }}
          BRIGHT_PROJECT_ID: ${{ vars.BRIGHT_PROJECT_ID }}
          BRIGHT_TOKEN: ${{ secrets.BRIGHT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRIGHT_TARGET_URL: "http://127.0.0.1:3000"
        run: |
          node --experimental-transform-types --experimental-strip-types --experimental-detect-module \
          --disable-warning=MODULE_TYPELESS_PACKAGE_JSON --disable-warning=ExperimentalWarning \
          --test-force-exit --test-concurrency=4 --test .brightsec/tests/*.test.ts

      - name: Clean up
        run: |
          docker stop juice-shop-container
          docker rm juice-shop-container
